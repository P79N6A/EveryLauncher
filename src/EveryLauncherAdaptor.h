/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp com.gitee.wanywhn.EveryLauncher.xml -i dbusproxy.h -a EveryLauncherAdaptor -l DBusProxy
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef EVERYLAUNCHERADAPTOR_H
#define EVERYLAUNCHERADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "dbusproxy.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.gitee.wanywhn.EveryLauncher
 */
class EveryLauncherAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.gitee.wanywhn.EveryLauncher")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.gitee.wanywhn.EveryLauncher\">\n"
"    <method name=\"IndexChangeFiles\">\n"
"      <arg direction=\"in\" type=\"as\" name=\"paths\"/>\n"
"    </method>\n"
"    <method name=\"showWindow\"/>\n"
"  </interface>\n"
        "")
public:
    EveryLauncherAdaptor(DBusProxy *parent);
    virtual ~EveryLauncherAdaptor();

    inline DBusProxy *parent() const
    { return static_cast<DBusProxy *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void IndexChangeFiles(const QStringList &paths);
    void showWindow();
Q_SIGNALS: // SIGNALS
};

#endif
